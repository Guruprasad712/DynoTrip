substitutions:
  _REGION: us-central1
  _AR_REPO: dynotrip
  _API_SERVICE: dynotrip-api
  _MCP_SERVICE: dynotrip-mcp

options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Build and push MCP image
  - name: gcr.io/cloud-builders/docker
    id: build-mcp
    args:
      - build
      - -t
      - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_MCP_SERVICE}:$COMMIT_SHA"
      - -f
      - backend/Dockerfile.mcp
      - .
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_MCP_SERVICE}:$COMMIT_SHA"

  # Deploy MCP service
  - name: gcr.io/cloud-builders/docker
    id: deploy-mcp
    waitFor: ['-']
    args:
      - run
      - --rm
      - -v
      - /workspace:/workspace
      - -w
      - /workspace
      - gcr.io/cloud-builders/gcloud
      - |
        bash -c "
        echo 'Deploying MCP service...'
        gcloud run deploy ${_MCP_SERVICE} \
          --image "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_MCP_SERVICE}:$COMMIT_SHA" \
          --region ${_REGION} \
          --allow-unauthenticated \
          --platform managed \
          --port 8080 \
          --set-secrets GOOGLE_MAPS_API_KEY=GOOGLE_MAPS_API_KEY:latest \
          --update-secrets /secrets/gcp-credentials.json=GOOGLE_APPLICATION_CREDENTIALS:latest \
          --update-env-vars GOOGLE_APPLICATION_CREDENTIALS=/secrets/gcp-credentials.json

        echo 'Waiting for MCP service to be ready...'
        for i in {1..30}; do
          MCP_SERVICE_URL=$(gcloud run services describe ${_MCP_SERVICE} --region ${_REGION} --format 'value(status.url)')
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$MCP_SERVICE_URL/" || true)
          if [ "$STATUS" -eq 200 ]; then
            echo "MCP service is ready at $MCP_SERVICE_URL"
            # Write the URL to a file that can be used in the next step
            echo "$MCP_SERVICE_URL" > /workspace/mcp_url.txt
            break
          fi
          echo "Waiting for MCP... attempt $i (status $STATUS)"
          sleep 10
        done
        "

  # Deploy API service
  - name: gcr.io/cloud-builders/docker
    id: deploy-api
    waitFor: ['deploy-mcp']
    args:
      - run
      - --rm
      - -v
      - /workspace:/workspace
      - -w
      - /workspace
      - gcr.io/cloud-builders/gcloud
      - |
        bash -c "
        MCP_SERVICE_URL=$(cat /workspace/mcp_url.txt)
        
        echo 'Deploying API service with MCP URL:' $MCP_SERVICE_URL
        
        gcloud run deploy ${_API_SERVICE} \
          --image "${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_API_SERVICE}:$COMMIT_SHA" \
          --region ${_REGION} \
          --allow-unauthenticated \
          --platform managed \
          --port 8080 \
          --set-secrets GEMINI_API_KEY=GEMINI_API_KEY:latest,VERTEX_API_KEY=VERTEX_API_KEY:latest,PROJECT_ID=PROJECT_ID:latest,VERTEX_AI_MODEL=VERTEX_AI_MODEL:latest \
          --update-secrets /secrets/gcp-credentials.json=GOOGLE_APPLICATION_CREDENTIALS:latest \
          --set-env-vars "MCP_SERVER_URL=$MCP_SERVICE_URL" \
          --update-env-vars "VERTEX_AI_LOCATION=${_REGION},GOOGLE_APPLICATION_CREDENTIALS=/secrets/gcp-credentials.json"
        "
