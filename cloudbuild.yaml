options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _MCP_SERVER_URL: "http://127.0.0.1:8081/mcp"  # FastMCP HTTP endpoint requires /mcp; override per-env/trigger
  _VERTEX_AI_LOCATION: "us-central1"        # Override if needed
  _VERTEX_AI_MODEL: "gemini-2.5-flash"      # Optional model override
  _GEMINI_API_KEY: ""                       # Provide via trigger if using Gemini API key
  _VERTEX_API_KEY: ""                       # Provide via trigger if using Vertex API key
  _GOOGLE_MAPS_API_KEY: ""                  # Provide via trigger
  _RUNTIME_SERVICE_ACCOUNT: "mcp-toolbox-sa@gptrix.iam.gserviceaccount.com"  # Runtime SA used by Cloud Run

steps:
  # Build unified backend image from Dockerfile.all
  - name: gcr.io/cloud-builders/docker
    id: build-backend
    args:
      - build
      - -t
      - "us-central1-docker.pkg.dev/$PROJECT_ID/dynotrip-repo/dynotrip-backend:$COMMIT_SHA"
      - -f
      - backend/Dockerfile.all
      - .

  # Push image to Artifact Registry
  - name: gcr.io/cloud-builders/docker
    id: push-backend
    args:
      - push
      - "us-central1-docker.pkg.dev/$PROJECT_ID/dynotrip-repo/dynotrip-backend:$COMMIT_SHA"

  # Deploy single Cloud Run service
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: deploy-backend
    entrypoint: gcloud
    args:
      - run
      - deploy
      - dynotrip-backend
      - --image=us-central1-docker.pkg.dev/$PROJECT_ID/dynotrip-repo/dynotrip-backend:$COMMIT_SHA
      - --region=us-central1
      - --platform=managed
      - --service-account=$_RUNTIME_SERVICE_ACCOUNT
      - --allow-unauthenticated
      - --port=8080
      - --timeout=600
      - --min-instances=1
      - --max-instances=1
      - --cpu=1
      - --memory=1Gi
      - --concurrency=1
      - --ingress=all
      - --update-env-vars=PYTHONUNBUFFERED=1,LOG_LEVEL=DEBUG
images:
  - us-central1-docker.pkg.dev/$PROJECT_ID/dynotrip-repo/dynotrip-backend:$COMMIT_SHA